{"version":3,"sources":["components/Header.js","classfiles/Stamp.js","components/StampContainerData.js","components/StampContainerImage.js","components/StampContainer.js","components/pages/StampListContainer.js","components/pages/About.js","components/pages/Summary.js","components/EditStampForm.js","components/pages/AddStamp.js","components/MainWindow.js","components/DataManager.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","color","backgroundColor","padding","borderStyle","textAlign","Component","Stamp","id","name","yearPublished","isStamped","imgUrl","country","price","this","imageUrl","parseFloat","toFixed","msg","alert","StampContainerData","stamp","Object","assign","props","stampData","DataHeader","borderColor","borderRadius","width","DataText","position","right","className","GetPriceString","String","StampContainerImage","src","imagePath","maxWidth","maxHeight","margin","alt","StampContainer","headerClicked","setState","showFull","state","onClick","hidden","to","pathname","StampListContainer","GetStampList","Array","from","stampCollection","map","element","key","About","Summary","EditStampForm","handleSubmit","event","preventDefault","stopPropagation","CheckImage","stampImageUrl","HandleStampAdding","imageOKFunction","img","Image","onload","onerror","stampId","console","log","stampName","stampPrice","isNaN","stampYearPublished","stampCountry","stampIsStamped","undefined","test","ImageContainer","UpdateThisState","e","addStampToCollection","nameChanged","handleChange","bind","priceChanged","yearPublishedChanged","countryChanged","imageUrlChanged","keyName","target","value","onSubmit","type","onChange","isStampedChanged","AddStampContainer","MainWindow","AddStampToCollection","dataManager","UpdateCollection","exact","path","component","location","initDataManager","stamp1","stamp2","stamp3","push","length","StampToConsole","StampToAlert","index","findIndex","x","App","DataManager","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d2a339a2.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../styles/StyleSheet.css'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        const headerStyle = {\r\n            color: \"yellow\",\r\n            backgroundColor: \"#282c34\",\r\n            padding: \"5px\",\r\n            borderStyle: \"solid\", \r\n            textAlign: \"center\"      \r\n        }\r\n        return (\r\n            <div>\r\n               <h1 style={headerStyle}>Stamp Collector App</h1> \r\n            </div>\r\n        )\r\n    }\r\n}","class Stamp {\r\n    constructor(id,name,yearPublished,isStamped,imgUrl,country,price){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.yearPublished = yearPublished;\r\n        this.isStamped = isStamped; \r\n        this.imageUrl = imgUrl;\r\n        this.country = country;\r\n        this.price = price;\r\n    }\r\n    \r\n    GetPriceString(){\r\n        return parseFloat(this.price).toFixed(2)\r\n    }\r\n\r\n    StampToAlert(){\r\n        let msg =  \"\"\r\n        msg += \"ID: \"+this.id+\"\\n\"\r\n        msg += \"Name: \"+this.name+\"\\n\"\r\n        msg += \"Price: \"+this.price+\"\\n\"\r\n        msg += \"Year Published: \"+this.yearPublished+\"\\n\"\r\n        msg += \"country: \"+this.country+\"\\n\"\r\n        msg += \"isStamped: \"+this.isStamped\r\n        alert(msg)\r\n    }\r\n}\r\n\r\n\r\nexport {Stamp}","import React, { Component } from \"react\";\r\nimport { Stamp } from \"../classfiles/Stamp\";\r\n\r\nexport default class StampContainerData extends Component {\r\n  render() {\r\n    var stamp = new Stamp();\r\n    Object.assign(stamp, this.props.stampData);\r\n    const DataHeader = {\r\n      color: \"yellow\",\r\n      backgroundColor: \"#181717\",\r\n      borderStyle: \"solid\",\r\n      borderColor: \"#181717\",\r\n      borderRadius: \"30%\",\r\n      width: \"80%\",\r\n      textAlign: \"center\",\r\n    };\r\n    const DataText = {\r\n      position: \"relative\",\r\n      textAlign: \"center\",\r\n      right: \"50px\",\r\n    };\r\n    return (\r\n      <div className=\"StampContainerData\">\r\n        <div style={DataHeader}>Name</div>\r\n        <div style={DataText}>{stamp.name}</div>\r\n\r\n        <div style={DataHeader}>Price</div>\r\n        <div style={DataText}>{stamp.GetPriceString()} €</div>\r\n\r\n        <div style={DataHeader}>Country</div>\r\n        <div style={DataText}>{stamp.country}</div>\r\n\r\n        <div style={DataHeader}>Year Published</div>\r\n        <div style={DataText}>{stamp.yearPublished}</div>\r\n\r\n        <div style={DataHeader}>Is Stamped</div>\r\n        <div style={DataText}>{String(stamp.isStamped)}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class StampContainerImage extends Component {\r\n    render() {\r\n        const imgStyles = {\r\n            maxWidth: '100%',\r\n            maxHeight: '100%',\r\n            margin: '5px',\r\n            borderRadius: '30%'\r\n        }\r\n        return (\r\n            <div className=\"StampContainerImage\">\r\n                <img src={this.props.imagePath} style={imgStyles} alt=\"StampPic\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport '../styles/StyleSheet.css'\r\nimport StampData from './StampContainerData'\r\nimport StampImage from './StampContainerImage'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default class StampContainer extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            showFull:false\r\n        }\r\n    }\r\n\r\n    headerClicked = () =>{\r\n        this.setState(\r\n            {showFull:!this.state.showFull}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col StampContainer\" onClick={this.headerClicked}>\r\n                <div className=\"row StampContainerHeader\">\r\n                    <div className='HeaderCol col-1'  hidden={this.state.showFull}>\r\n                        <img src={this.props.stamp.imageUrl} alt=\"StampPic\"/>\r\n                    </div>\r\n                    <div className=\"HeaderCol StampHeader\" >\r\n                        {this.props.stamp.name}\r\n                    </div>\r\n                    <div className=\"HeaderCol col text-right\" hidden={this.state.showFull}>\r\n                        {this.props.stamp.GetPriceString()} €\r\n                    </div>\r\n                </div>\r\n               <div className=\"row\" hidden={!this.state.showFull}>\r\n                    <div className=\"col-4\">\r\n                    <StampImage imagePath={this.props.stamp.imageUrl} />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                    <StampData stampData = {this.props.stamp}/>\r\n                    <NavLink to={{ pathname:\"/addStamp\", stamp:this.props.stamp}}><button className=\"myButton\">Edit Stamp</button></NavLink>        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport StampContainer from '../StampContainer'\r\n\r\nexport default class StampListContainer extends Component {\r\n    GetStampList = () => Array.from(this.props.stampCollection).map(element => {\r\n      return  <StampContainer stamp={element} key={element.id}/>\r\n    });\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.GetStampList()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>World's most interesting About page. Ever. Seriously.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Summary extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Summa summarum sum.</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {Stamp} from '../classfiles/Stamp'\r\nimport StampContainerImage from './StampContainerImage'\r\nimport '../styles/StyleSheet.css'\r\n\r\nexport default class EditStampForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.test = this.props.addStampToCollection\r\n        \r\n            this.state = {\r\n                stamp:this.props.stamp,\r\n                stampId:(this.props.stamp != null) ? this.props.stamp.id : \"\",\r\n                stampName:(this.props.stamp != null) ? this.props.stamp.name : \"\",\r\n                stampPrice:(this.props.stamp != null) ? this.props.stamp.price : \"\",\r\n                stampYearPublished:(this.props.stamp != null) ? this.props.stamp.yearPublished : \"\",\r\n                stampCountry:(this.props.stamp != null) ? this.props.stamp.country : \"\",\r\n                stampImageUrl:(this.props.stamp != null) ? this.props.stamp.imageUrl : \"\"\r\n        }\r\n        this.nameChanged = this.handleChange.bind(this, 'stampName');\r\n        this.priceChanged = this.handleChange.bind(this, 'stampPrice');\r\n        this.yearPublishedChanged = this.handleChange.bind(this, 'stampYearPublished');\r\n        this.countryChanged = this.handleChange.bind(this, 'stampCountry');\r\n        this.imageUrlChanged = this.handleChange.bind(this, 'stampImageUrl');\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(keyName, e) {\r\n        this.setState({ [keyName]: e.target.value });\r\n    }\r\n    \r\n    handleSubmit = (event) => {  \r\n        \r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.CheckImage(this.state.stampImageUrl,this.HandleStampAdding)\r\n    }\r\n    \r\n    CheckImage = (imageUrl,imageOKFunction) =>{\r\n        var img = new Image();\r\n        img.src =imageUrl;\r\n        img.onload = () =>  {imageOKFunction()}\r\n        img.onerror=() => alert(\"Image was not valid!\")\r\n    }\r\n\r\n    HandleStampAdding = () =>{\r\n\r\n        let id = this.state.stampId;\r\n        if(id === \"\"){\r\n            id=null\r\n        }\r\n\r\n        console.log(\"Submitted\")\r\n        let name = this.state.stampName\r\n        if(name === \"\"){\r\n            name=\"Stamp has no name\"\r\n        } \r\n        let price = parseFloat(this.state.stampPrice)\r\n        if(isNaN(price) === true){\r\n            console.log(\"in NaN\")\r\n            price = parseFloat(0.0)\r\n        }\r\n        this.setState(  {\r\n            stampPrice:price\r\n        })\r\n        \r\n        let yearPublished = this.state.stampYearPublished\r\n        let country = this.state.stampCountry\r\n        if(this.state.stampCountry === \"\"){\r\n            alert(\"You have to give country!\")\r\n            return;\r\n        }\r\n        let isStamped = this.state.stampIsStamped\r\n        if(isStamped === undefined){\r\n            isStamped = true;\r\n        } \r\n        let imgUrl = this.state.stampImageUrl\r\n        let stamp = new Stamp(id,name,yearPublished,isStamped,imgUrl,country,price)\r\n        \r\n        this.test(stamp)\r\n        console.log(this.props.stamp)\r\n    }\r\n\r\n    ImageContainer = () => {\r\n        if(this.state.stampImageUrl === \"\"){\r\n            return <p>no picture provided</p>\r\n        }\r\n        else{\r\n           return <StampContainerImage imagePath={this.state.stampImageUrl}/>\r\n        }\r\n    }\r\n    UpdateThisState = (e) => {\r\n        \r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* image */}\r\n                <div className='row ImageRow justify-content-center'>\r\n                    \r\n                    <div className='col-4 center'>\r\n                        {this.ImageContainer()}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* form */}\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Name:\r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampName} onChange={this.nameChanged}></input>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Price: \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampPrice} onChange={this.priceChanged}></input>\r\n                                    </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Country: \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampCountry} onChange={this.countryChanged}></input>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Year Published:\r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampYearPublished} onChange={this.yearPublishedChanged}></input>\r\n                                </div> \r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Stamped:        \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <select value={this.state.stampIsStamped} onChange={this.isStampedChanged}>\r\n                                        <option value=\"true\">true</option>\r\n                                        <option value=\"false\">false</option>\r\n                                    </select>\r\n                                </div> \r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Image URL:        \r\n                                </div> \r\n                                <div className='col'>\r\n                                <input type=\"text\" value={this.state.stampImageUrl} onChange={this.imageUrlChanged}></input>\r\n\r\n                                </div> \r\n                            </div>\r\n                        <button type=\"submit\" className=\"myButton\" onClick={this.UpdateThisState}>Save</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport EditStampForm from '../EditStampForm'\r\n\r\nexport default class AddStampContainer extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <EditStampForm  stamp={this.props.stamp} addStampToCollection={this.props.addStampToCollection}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport {BrowserRouter as Router, Route,Link} from 'react-router-dom'\r\nimport StampListContainer from './pages/StampListContainer'\r\nimport About from './pages/About'\r\nimport Summary from './pages/Summary'\r\nimport AddStamp from './pages/AddStamp'\r\nimport '../styles/StyleSheet.css'\r\n\r\nexport default class MainWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n             dataManager:this.props.dataManager,\r\n             stampCollection:this.props.dataManager.stampCollection\r\n        }\r\n    }\r\n\r\n    AddStampToCollection = (stamp) =>{\r\n           this.state.dataManager.addStampToCollection(stamp)\r\n          this.UpdateCollection()\r\n    }\r\n    \r\n    UpdateCollection = () => {\r\n        console.log(\"Updated collection\")\r\n        this.setState({\r\n            stampCollection:this.state.dataManager.stampCollection\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var list = () => <StampListContainer stampCollection={this.state.stampCollection} />\r\n        var about = () => <About />\r\n        var addStamp = (props) => {\r\n        return <AddStamp stamp={props.location.stamp} addStampToCollection={this.AddStampToCollection} />\r\n        }\r\n        var summary = () => <Summary />\r\n        return (\r\n            <div className=\"col \">\r\n                <Router>\r\n                <div className=\"row\">\r\n                    <div className=\"col justify-content-center Links\">\r\n                        <Link className=\"RouterLink\" to=\"/\">List</Link> | <Link \r\n                        className=\"RouterLink\" to=\"/Summary\">Summary</Link> | <Link \r\n                        className=\"RouterLink\" to=\"/addStamp\">Add Stamp</Link> | <Link \r\n                        className=\"RouterLink\" to=\"/About\">About</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Route exact path=\"/\" component={list} />\r\n                        <Route path=\"/Summary\" component={summary} />\r\n                        <Route path=\"/addStamp\" component={addStamp} />\r\n                        <Route path=\"/about\" component={about} />\r\n                    </div>\r\n                </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}","import {Stamp} from '../classfiles/Stamp'\r\n\r\nvar stampCollection = [];\r\n\r\nvar initDataManager = () => {\r\n\r\n    var stamp1 = new Stamp(\r\n        1,\r\n        \"Steven Seagull\",\r\n        \"1984\",\r\n        false,\r\n        'https://www.postcrossingyhdistys.fi/wp-content/uploads/2016/02/WTstamp_47787.jpg',\r\n        \"Finland\",\r\n        1.80, \r\n      )\r\n        var stamp2 = new Stamp(\r\n        2,\r\n        \"Water xD\",\r\n        \"1911\",\r\n        true,\r\n        'https://www.posti.com/globalassets/news/2019-images/stamps/pilvia-saaristossa-postimerkki2017.jpg',\r\n        \"Finland\",\r\n        2.30, \r\n      )\r\n        var stamp3 = new Stamp(\r\n        3,    \r\n        \"Suicide Swan\",\r\n        \"1934\",\r\n        true,\r\n        'https://www.posti.com/globalassets/joutsenmerkki_600.jpg',\r\n        \"Finland\",\r\n        1.90,\r\n      )\r\n      \r\n       \r\n      stampCollection.push(stamp1, stamp2, stamp3)\r\n}\r\n\r\nvar addStampToCollection = (stamp) =>{\r\n    console.log(\"Trying to add stamp to the collection\")\r\n    if(stamp.id === null){\r\n       \r\n        stamp.id = stampCollection.length +1;\r\n        if(stamp.StampToConsole != null) {\r\n            stamp.StampToConsole();\r\n        }\r\n        stampCollection.push(stamp)\r\n    }\r\n    else{\r\n        stamp.StampToAlert();\r\n        \r\n        let index = stampCollection.findIndex( x => x.id === stamp.id)\r\n        if(index !== null){\r\n            \r\n           stampCollection[index] = stamp\r\n        }\r\n        else{\r\n            alert(\"Something went wrong when updating the stamp.\")\r\n        }\r\n    }\r\n\r\n} \r\n\r\nexport default {stampCollection,initDataManager,addStampToCollection}","import React from 'react';\nimport Header from './components/Header';\nimport MainWindow from './components/MainWindow';\nimport DataManager from './components/DataManager';\n\nfunction App() {\n  DataManager.initDataManager();\n  return (\n    <div className='App container-fluid col-10 justify-content-center'>\n      <Header/>\n      <MainWindow dataManager={DataManager}/>\n    </div>  \n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}